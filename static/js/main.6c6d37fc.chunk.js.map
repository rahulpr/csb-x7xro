{"version":3,"sources":["Icons.js","ExpenseList.js","NewExpense.js","App.js","index.js"],"names":["EyeOpen","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","d","cx","cy","r","EyeClosed","x1","y1","x2","y2","listDummy","id","name","amount","currency","timestamp","private","img","ExpenseList","openForm","useState","refreshing","setRefreshing","expenses","setExpenses","getItems","useCallback","console","log","setTimeout","deleteItem","confirm","prev","filter","v","useEffect","type","onClick","role","length","map","item","i","Date","toLocaleString","NewExpense","closeForm","setNewExpenseAddedAt","addExpense","getTime","htmlFor","App","showForm","setShowForm","newExpenseAddedAt","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6c6d37fc.chunk.js","sourcesContent":["export function EyeOpen() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={12}\r\n      height={12}\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"feather feather-eye\"\r\n    >\r\n      <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\r\n      <circle cx={12} cy={12} r={3} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function EyeClosed() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={12}\r\n      height={12}\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"feather feather-eye-off\"\r\n    >\r\n      <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\" />\r\n      <line x1={1} y1={1} x2={23} y2={23} />\r\n    </svg>\r\n  );\r\n}\r\n","import \"./styles.css\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { EyeOpen, EyeClosed } from \"./Icons\";\r\n\r\nconst listDummy = [\r\n  {\r\n    id: 1,\r\n    name: \"Al Maya\",\r\n    amount: \"55.7\",\r\n    currency: \"AED\",\r\n    timestamp: 1633440836004,\r\n    private: true,\r\n    img: null\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Lulu Hypermarket\",\r\n    amount: \"123.45\",\r\n    currency: \"AED\",\r\n    timestamp: 1633440853638,\r\n    private: false,\r\n    img: null\r\n  }\r\n];\r\n\r\nfunction formatDate(timestamp) {\r\n  const d = new Date(timestamp);\r\n  return d.toLocaleString();\r\n}\r\n\r\nconst ExpenseList = ({ openForm }) => {\r\n  const [refreshing, setRefreshing] = useState(true);\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const getItems = useCallback(() => {\r\n    // get data from server\r\n    console.log(\"Calling API\");\r\n    setRefreshing(true);\r\n    setTimeout(function () {\r\n      setExpenses(listDummy);\r\n      setRefreshing(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const deleteItem = useCallback(\r\n    (id) => () => {\r\n      if (confirm(\"Are you sure to delete?\")) {\r\n        // call delete api\r\n        setExpenses((prev) => prev.filter((v) => v.id !== id));\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [getItems]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* header */}\r\n      <div className=\"row my-3\">\r\n        <div className=\"col\">\r\n          <button type=\"button\" className=\"btn btn-link\" onClick={openForm}>\r\n            Add New\r\n          </button>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h2 className=\"text-center \">My Expenses</h2>\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end align-items-center\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={getItems}>\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* list */}\r\n      <div className=\"row\">\r\n        {refreshing && (\r\n          <div className=\"col d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-primary \" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {!refreshing && expenses.length === 0 && <div>No Items to Display</div>}\r\n\r\n        {!refreshing &&\r\n          expenses.map((item, i) => (\r\n            <div className=\"card my-1 item\" key={i}>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-9\">\r\n                    <h5 className=\"card-title\">\r\n                      {item.currency} <strong>{item.amount}</strong>\r\n                    </h5>\r\n                    <p className=\"card-text\">{item.name}</p>\r\n                    {/* icon */}\r\n                    {item.private ? <EyeClosed /> : <EyeOpen />}\r\n                    <span className=\"badge bg-light text-dark\">\r\n                      {formatDate(item.timestamp)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col d-flex justify-content-end align-items-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      onClick={deleteItem(item.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import { useCallback } from \"react\";\r\n\r\nconst NewExpense = ({ closeForm, setNewExpenseAddedAt }) => {\r\n  const addExpense = useCallback(() => {\r\n    // post data to server\r\n    setNewExpenseAddedAt(new Date().getTime());\r\n    closeForm();\r\n  }, [setNewExpenseAddedAt, closeForm]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* header */}\r\n      <div className=\"row my-3\">\r\n        <div className=\"col\"></div>\r\n        <div className=\"col-6\">\r\n          <h2 className=\"text-center \">Add New Expense</h2>\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end align-items-center\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={closeForm}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* form */}\r\n      <form className=\"row g-3\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Shared Expense\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <label htmlFor=\"inputEmail4\" className=\"form-label\">\r\n            Expense Name\r\n          </label>\r\n          <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" />\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <label htmlFor=\"inputPassword4\" className=\"form-label\">\r\n            Amount\r\n          </label>\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n              AED\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Sizing example input\"\r\n              aria-describedby=\"inputGroup-sizing-default\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={addExpense}\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./styles.css\";\nimport ExpenseList from \"./ExpenseList\";\nimport { useCallback, useState } from \"react\";\nimport NewExpense from \"./NewExpense\";\n\nexport default function App() {\n  const [showForm, setShowForm] = useState(false);\n  const [newExpenseAddedAt, setNewExpenseAddedAt] = useState(null);\n\n  const openForm = useCallback(() => {\n    setShowForm(true);\n  }, []);\n\n  const closeForm = useCallback(() => {\n    setShowForm(false);\n  }, []);\n\n  if (showForm) {\n    return (\n      <NewExpense\n        closeForm={closeForm}\n        setNewExpenseAddedAt={setNewExpenseAddedAt}\n      />\n    );\n  }\n\n  return <ExpenseList openForm={openForm} key={newExpenseAddedAt} />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}